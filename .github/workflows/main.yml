name: ROS

on:
  push:
    branches: [ "main", "development"]
  pull_request:
    branches: [ "main", "development"]

jobs:
#   debug_info:
#     name: Debug Info
#     runs-on: ubuntu-latest
#     steps:
#     - name: Event Name
#       run: >
#            echo "Event Name:  ${{ github.event_name }}"
#     - name: Branch Name
#       run: >
#            echo "Branch Name: ${{ github.ref_name }}"
#     - name: Event Test
#       run: >
#            echo "Event Test:  ${{ github.event_name == 'push' }}"
#     - name: Event Test
#       run: >
#            echo "Branch Test: ${{ github.ref_name == 'main' }}"
#     - name: Full Test
#       run: >
#            echo "Full Test:   ${{ job.status == 'success' && github.event_name == 'push' && github.ref_name == 'main' }}"
   
  ros_ci:
    name: ROS ${{ matrix.ROS_DISTRO }} (${{ matrix.BUILD_TYPE }})
    runs-on: ubuntu-latest
    container: ros:${{ matrix.ROS_DISTRO }}-ros-core
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [noetic, melodic, kinetic]
        BUILD_TYPE: [Release, Debug]
    env:
      BADGE_CREATION: ${{ github.event_name == 'push' && github.ref == 'refs/head/main' && github.repository_owner == 'aau-cns' }}
    steps:
    - name: Create Badge (running)
      if: ${{ env.BADGE_CREATION == 'true' }}
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: d4b4eee830e1c61a17ed35ecf413f8d1
        filename: build_ros_${{ matrix.ROS_DISTRO }}_${{ matrix.BUILD_TYPE }}.json
        label: ${{ matrix.ROS_DISTRO }}
        message: running
        color: orange
        namedLogo: ROS
    
    - name: Debug Info
      run: >
           echo "Full Test:     ${{ matrix.ROS_DISTRO == 'kinetic' }}"
           echo "Full Test:     ${{ matrix.ROS_DISTRO != 'kinetic' }}"
           echo "Badge Creatio: ${BADGE_CREATION}"
    
    - name: Install Dependencies
      run: >
           apt update && apt install --no-install-recommends -y
           git
           doxygen
           graphviz
           build-essential
           libeigen3-dev
           libgoogle-glog-dev
           libgflags-dev
           libgeographic-dev
           geographiclib-tools
           ros-${{ matrix.ROS_DISTRO }}-dynamic-reconfigure
           ros-${{ matrix.ROS_DISTRO }}-eigen-conversions
           ros-${{ matrix.ROS_DISTRO }}-tf
           ros-${{ matrix.ROS_DISTRO }}-tf2-ros
           ros-${{ matrix.ROS_DISTRO }}-tf2-eigen
           ros-${{ matrix.ROS_DISTRO }}-mavlink
           ros-${{ matrix.ROS_DISTRO }}-nodelet
           ros-${{ matrix.ROS_DISTRO }}-geographic-msgs
           ros-${{ matrix.ROS_DISTRO }}-angles
           ros-${{ matrix.ROS_DISTRO }}-diagnostic-updater
           ros-${{ matrix.ROS_DISTRO }}-urdf
           
    - name: Install ROS-dependent dependencies
      if: ${{ matrix.ROS_DISTRO != 'kinetic' }}
      run: >
           apt update && apt install --no-install-recommends -y
           python3-catkin-tools
           
    - name: Install ROS-dependent dependencies
      if: ${{ matrix.ROS_DISTRO == 'kinetic' }}
      run: >
           apt update && apt install --no-install-recommends -y
           python-catkin-tools

    - name: Create Catkin Workspace
      run: mkdir -p ${{github.workspace}}/flightstack_cws

    - name: Checkout Latest Version
      uses: actions/checkout@v3
      with:
        path: ${{github.workspace}}/flightstack_cws
        # submodules: recursive

    - name: Build
      working-directory: ${{github.workspace}}/flightstack_cws
      run: /bin/bash -c '. /opt/ros/${{ matrix.ROS_DISTRO }}/setup.bash; catkin build -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }};'

    - name: Create Badge (success)
      if: ${{ success() && env.BADGE_CREATION == 'true' }}
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: d4b4eee830e1c61a17ed35ecf413f8d1
        filename: build_ros_${{ matrix.ROS_DISTRO }}_${{ matrix.BUILD_TYPE }}.json
        label: ${{ matrix.ROS_DISTRO }}
        message: passing
        color: green
        namedLogo: ROS

    - name: Create Badge (failure)
      if: ${{ failure() && env.BADGE_CREATION == 'true' }}
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: d4b4eee830e1c61a17ed35ecf413f8d1
        filename: build_ros_${{ matrix.ROS_DISTRO }}_${{ matrix.BUILD_TYPE }}.json
        label: ${{ matrix.ROS_DISTRO }}
        message: failure
        isError: true
        namedLogo: ROS
        
    - name: Create Badge (cancelled)
      if: ${{ cancelled() && env.BADGE_CREATION == 'true' }}
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: d4b4eee830e1c61a17ed35ecf413f8d1
        filename: build_ros_${{ matrix.ROS_DISTRO }}_${{ matrix.BUILD_TYPE }}.json
        label: ${{ matrix.ROS_DISTRO }}
        message: cancelled
        color: inactive
        namedLogo: ROS
